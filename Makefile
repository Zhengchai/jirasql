#!/usr/bin/make -f
# philippeg feb2014
# Generate csv files
# with persons who were assigned or commented on jira tickets, between a set of dates
# using the jira SQL interface, see: https://developer.atlassian.com/display/JIRADEV/Database+Schema 
#
.PHONY: login clean reallyclean test dotar

##########################customise this section###############################################
#start date: yyyy-mm-dd 
startdate=2014-06-23
#end date: yyyy-mm-dd 
enddate=2014-06-26
#jira projects, e.g. CA, CP, SCTX... 
projects=CA
team=xs-ring3
IssueVersion=Creedence
FixVersion=Creedence Outgoing
#priority='Blocker','Critical'
#priorityDemote='Major','Minor','Trivial'
priority='Major'
priorityDemote='Minor','Trivial'
########################end of custom section##################################################
#jira server params, read from .config file
host=$(lastword $(shell grep 'host' .config))
dbname=$(lastword $(shell grep 'dbname' .config))
username=$(lastword $(shell grep 'username' .config))
password=$(lastword $(shell grep 'password' .config))
#
ConnectToJira=psql --host=$(host) --dbname=$(dbname) --username=$(username)
setJiraPass=export PGPASSWORD=$(password)

#autogenerated name
suffix=$(names).$(projects).from.$(startdate).to.$(enddate)
namesPsqlFormat=$(shell echo $(names) | sed "s/\([^,]*\)/'\1'/g")
projectsPsqlFormat=$(shell echo $(projects) | sed "s/\([^,]*\)/'\1'/g")
targets=commentsHistory.$(suffix).csv assignedHistory.$(suffix).csv 
targets+=statusHistory.$(suffix).csv priorityHistory.$(suffix).csv 
report=jira.report.$(suffix).csv
ticketlist=jira.ticketlist.$(suffix).csv
###############################################################################################
all: clean report.$(team).$(priority).from.$(startdate).$(enddate).csv
inflow.csv: createdHistory.csv TeamInHistory.csv IssueAffectVersionHistory.csv promotePriorityHistory.csv reopenedHistory.csv
	@echo '=====================[Inflow from $(startdate) to $(enddate)]=======' 	| tee   $@
	@echo '----------------------------Created---------------------------------' 	| tee -a  $@
	@cat createdHistory.csv															| tee -a  $@
	@echo '----------------------------Xfered into team------------------------' 	| tee -a  $@
	@cat TeamInHistory.csv															| tee -a  $@
	@echo '----------------------------Affect Version Changed------------------'	| tee -a  $@
	@cat IssueAffectVersionHistory.csv												| tee -a  $@
	@echo '----------------------------Priority raised-------------------------'	| tee -a  $@
	@cat promotePriorityHistory.csv													| tee -a  $@
	@echo '----------------------------Status Reopened-------------------------'	| tee -a  $@
	@cat reopenedHistory.csv														| tee -a  $@
outflow.csv: resolvedHistory.csv TeamOutHistory.csv IssueFixVersionHistory.csv demotePriorityHistory.csv 
	@echo '=====================[Outflow from $(startdate) to $(enddate)]======'	| tee   $@
	@echo '----------------------------Resolved--------------------------------'	| tee -a  $@
	@cat resolvedHistory.csv														| tee -a  $@
	@echo '----------------------------Xfered off team-------------------------'	| tee -a  $@
	@cat TeamOutHistory.csv															| tee -a  $@
	@echo '----------------------------Set to Outgoing-------------------------'	| tee -a  $@
	@cat IssueFixVersionHistory.csv													| tee -a  $@
	@echo '----------------------------Priority lowered------------------------'	| tee -a  $@
	@cat demotePriorityHistory.csv													| tee -a  $@
report.$(team).$(priority).from.$(startdate).$(enddate).csv: inflow.csv outflow.csv
	@echo 'Generating report...'
	@echo 'REPORT from $(startdate) to $(enddate)'	| tee   $@
	@echo 'Team: $(team)'							| tee -a  $@
	@echo 'Release: $(IssueVersion)'				| tee -a  $@
	@echo 'Priority: $(priority)'					| tee -a  $@
	@cat inflow.csv | ./rmdup.pl					| tee -a  $@
	@cat outflow.csv | ./rmdup.pl					| tee -a  $@
	
login:
	$(setJiraPass) ; $(ConnectToJira)
clean: 
	rm -f inflow.csv outflow.csv $(subst .sql,.csv,$(shell ls *.sql))
reallyclean:
	rm -f *.csv
IssueFixVersionHistory.csv: IssueFixVersionHistory.sql
	$(setJiraPass) ; $(ConnectToJira) \
	--field-separator="," --no-align --tuples-only \
	--variable=STARTDATE=$(startdate) --variable=ENDDATE=$(enddate) \
	--variable=TEAM="'$(team)'" --variable=PROJECTS="$(projectsPsqlFormat)" \
	--variable=PRIORITY="$(priority)" \
	--variable=FIXVERSION="$(FixVersion)" \
	-f $< | uniq | tee   $@
IssueAffectVersionHistory.csv: IssueAffectVersionHistory.sql
	$(setJiraPass) ; $(ConnectToJira) \
	--field-separator="," --no-align --tuples-only \
	--variable=STARTDATE=$(startdate) --variable=ENDDATE=$(enddate) \
	--variable=TEAM="'$(team)'" --variable=PROJECTS="$(projectsPsqlFormat)" \
	--variable=PRIORITY="$(priority)" \
	--variable=AFFECTVERSION="$(IssueVersion)" \
	-f $< | uniq | tee   $@
promotePriorityHistory.csv: priorityHistory.sql
	$(setJiraPass) ; $(ConnectToJira) \
	--field-separator="," --no-align --tuples-only \
	--variable=STARTDATE=$(startdate) --variable=ENDDATE=$(enddate) \
	--variable=TEAM="'$(team)'" --variable=PROJECTS="$(projectsPsqlFormat)" \
	--variable=RELIN="$(IssueVersion)" --variable=RELEXCL="$(FixVersion)" \
	--variable=PRIORITY="$(priority)" \
	-f $< | uniq | tee   $@
demotePriorityHistory.csv: priorityHistory.sql
	$(setJiraPass) ; $(ConnectToJira) \
	--field-separator="," --no-align --tuples-only \
	--variable=STARTDATE=$(startdate) --variable=ENDDATE=$(enddate) \
	--variable=TEAM="'$(team)'" --variable=PROJECTS="$(projectsPsqlFormat)" \
	--variable=RELIN="$(IssueVersion)" --variable=RELEXCL="$(FixVersion)" \
	--variable=PRIORITY="$(priorityDemote)" \
	-f $< | uniq | tee   $@
reopenedHistory.csv: statusHistory.sql
	$(setJiraPass) ; $(ConnectToJira) \
	--field-separator="," --no-align --tuples-only \
	--variable=STARTDATE=$(startdate) --variable=ENDDATE=$(enddate) \
	--variable=TEAM="'$(team)'"  --variable=PROJECTS="$(projectsPsqlFormat)" \
	--variable=RELIN="$(IssueVersion)" --variable=RELEXCL="$(FixVersion)" \
	--variable=PRIORITY="$(priority)" \
	--variable=STATUS="'Resolved','Closed'" \
	-f $< | uniq | tee   $@
%.csv: %.sql
	$(setJiraPass) ; $(ConnectToJira) \
	--field-separator="," --no-align --tuples-only \
	--variable=STARTDATE=$(startdate) --variable=ENDDATE=$(enddate) \
	--variable=TEAM="'$(team)'" --variable=PROJECTS="$(projectsPsqlFormat)" \
	--variable=RELIN="$(IssueVersion)" --variable=RELEXCL="$(FixVersion)" \
	--variable=PRIORITY="$(priority)" \
	-f $< | uniq | tee   $@
test:
	@echo $(subst .sql,.csv,$(shell ls *.sql))










